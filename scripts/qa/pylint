#!/usr/bin/env bash
set -euox pipefail

# Use pylint_dev to ignore warnings that are not relevant during development.

# Specify python env in .pythonenv
# Specify files/directories to exclude in .pylint_excludes

IGNORES=(
    -d invalid-name
    -d missing-function-docstring
    -d missing-class-docstring
    -d missing-module-docstring
    -d redefined-outer-name
    -d too-few-public-methods
    -d too-many-locals
    -d unspecified-encoding
    -d wrong-import-order
    -d too-many-arguments
    -d too-many-branches
    --max-line-length=88
)

if [ "$(basename "$0")" == "pylint_dev" ]; then
    echo "Running in dev mode, ignoring more"
    IGNORES+=(
        -d duplicate-code
        -d fixme
        -d unused-import
    )
fi

EXCLUDE_FILE=.pylint_excludes
if [ ! -f "$EXCLUDE_FILE" ]; then
    EXCLUDE_FILE=/dev/null
fi

if [ -f .pythonenv ]; then
    source .pythonenv
fi


# shellcheck disable=SC2046
pylint "${IGNORES[@]}" $({ grep -rl '^#!/.*python' . ; find . -name '*\.py'; } | grep -v /.git/ | grep -v ./lib/python | grep -v -f "$EXCLUDE_FILE") "$@"

pylint "${IGNORES[@]}" lib/python/mail "$@"

pylint "${IGNORES[@]}" lib/python/tools "$@"
