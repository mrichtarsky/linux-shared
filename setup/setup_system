#!/usr/bin/env bash
set -euxo pipefail

source /r/setup/_impl/tools.sh

readlinkf() { perl -MCwd -e 'print Cwd::abs_path shift' "$1";}

if [[ $(id -u) -ne 0 ]] ; then echo "Please run as root" ; exit 1 ; fi

PROJECT_DIR=${1-$(readlinkf /p)}
SECRETS_REPO=${2-}

if [[ "$OSTYPE" =~ ^darwin ]];
then
    REPO_DIR=/opt/repos
else
    REPO_DIR=/repos
fi

SHARED_REPO=$REPO_DIR/linux-shared

if [[ "$OSTYPE" =~ ^darwin ]];
then
    dscl . create /Groups/linux-shared
    dscl . create /Groups/linux-shared PrimaryGroupID 999
    grep -v -E "($REPO_DIR|$PROJECT_DIR)" /etc/synthetic.conf >/etc/synthetic_new.conf || true
    echo -e "repos\t$REPO_DIR" >>/etc/synthetic_new.conf
    echo -e "r\t$SHARED_REPO" >>/etc/synthetic_new.conf
    echo -e "p\t$PROJECT_DIR" >>/etc/synthetic_new.conf
    if diff /etc/synthetic.conf /etc/synthetic_new.conf
    then
        rm /etc/synthetic_new.conf
    else
        chmod 644 /etc/synthetic_new.conf
        mv /etc/synthetic_new.conf /etc/synthetic.conf
        echo "Please reboot so synthetic.conf takes effect and rerun the install with the same arguments"
        exit 0
    fi
else
    groupadd linux-shared || true

    rm /r || true
    ln -s "$SHARED_REPO" /r

    rm /p || true
    ln -s $PROJECT_DIR /p
fi

old_umask=$(umask)
umask 007

mkdir -p "$REPO_DIR"

if [ ! -d "$SHARED_REPO" ]
then
    git clone ssh://git@github.com/${GITHUB_USER-mrichtarsky}/linux-shared.git "$SHARED_REPO"
else
    cd "$SHARED_REPO"
    git pull
fi

add_if_not_present /r/.git/config "[user]\nemail = s@martinien.de"

if [ "$SECRETS_REPO" != "" ] && [ ! -d "$REPO_DIR/secrets" ]
then
    git clone "$SECRETS_REPO" "$REPO_DIR/secrets"
fi

umask $old_umask

pushd /r

git submodule init
git submodule update

/r/setup/fix_perms "$REPO_DIR"

mkdir -p $PROJECT_DIR
chmod a+rwx $PROJECT_DIR

mkdir -p /p/tools

if [[ ! "$OSTYPE" =~ ^darwin ]];
then
    PACKAGES="expect htop mc moreutils nano ncdu python3 ripgrep sysstat tmux watchman"
    DISTRO=$(awk '/^ID=/' /etc/*-release | awk -F'=' '{ print tolower($2) }')

    echo "Distribution: $DISTRO"

    if [ "$DISTRO" == '"sles"' ];
    then
        zypper --non-interactive install $PACKAGES libcurl-devel libopenssl-devel moreutils-parallel python3-pip ShellCheck
    else
        apt install --yes $PACKAGES fswatch libcurl4-openssl-dev libssl-dev parallel shellcheck ugrep
        apt remove apport apport-symptoms python3-apport
    fi

    wget https://dystroy.org/broot/download/x86_64-linux/broot
    chmod a+x broot
    mv broot /usr/local/bin/broot

    # VSCode watches
    add_if_not_present /etc/sysctl.conf fs.inotify.max_user_watches=524288
    add_if_not_present /etc/sysctl.conf fs.inotify.max_user_instances=10000
    add_if_not_present /etc/sysctl.conf fs.inotify.max_queued_events=200000
    sysctl -p

    # libtree
    tmp_libtree=$(mktemp -d)
    trap "rm -rf $tmp_libtree" EXIT
    cd "$tmp_libtree"
    git clone https://github.com/haampie/libtree.git
    cd libtree
    make
    make install

    # gron
    tmp_gron=$(mktemp -d)
    trap "rm -rf $tmp_gron" EXIT
    cd "$tmp_gron"
    wget https://github.com/tomnomnom/gron/releases/download/v0.7.1/gron-linux-amd64-0.7.1.tgz
    tar xf gron-linux-amd64-0.7.1.tgz
    mv gron /usr/local/bin

    # git watchman
    cd /usr/share/git-core/templates/hooks
    cp fsmonitor-watchman.sample query-watchman
    chmod a+x query-watchman
fi

/r/setup/_impl/setup_rust

export RUSTUP_HOME=/p/tools/rust
export CARGO_HOME=/p/tools/rust/.cargo
source /p/tools/rust/.cargo/env

cargo install --locked bat fd-find git-delta httm
chmod -R a+rx /p/tools/rust/.cargo

/r/build/git

# python
python3 -m pip install -U pypyp rich telegram-send
sitecust_dir=$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')
cp /r/setup/_impl/sitecustomize.py "$sitecust_dir"

add_cronjob cronjobs/clean_disk_caches "00 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/clean_disk_caches"
add_cronjob cronjobs/pull "10 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/pull /r"
add_cronjob cronjobs/is_repo_clean "08 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/is_repo_clean /r"

cp /r/setup/SYSTEM_VERSION /r/setup/state/

popd

echo "OK"
