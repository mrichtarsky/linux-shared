#!/usr/bin/env bash
set -euxo pipefail

if [[ $(id -u) -ne 0 ]] ; then echo "Please run as root" ; exit 1 ; fi

PROJECT_DIR=$1
SECRETS_REPO=${2-}

REPO_DIR=/repos

old_umask=$(umask)
umask 007
mkdir -p "$REPO_DIR"

if [ ! -d "$REPO_DIR/linux-shared" ]
then
    git clone ssh://git@github.com/${GITHUB_USER-mrichtarsky}/linux-shared.git "$REPO_DIR/linux-shared"
fi

if [ "$SECRETS_REPO" != "" ] && [ ! -d "$REPO_DIR/secrets" ]
then
    git clone "$SECRETS_REPO" "$REPO_DIR/secrets"
fi

umask $old_umask

groupadd linux-shared || true

rm /r
ln -s "$REPO_DIR/linux-shared" /r

pushd /r

git submodule init
git submodule update

/r/fix_perms "$REPO_DIR"

mkdir -p $PROJECT_DIR
chmod a+rwx $PROJECT_DIR
rm /p || true
ln -s $PROJECT_DIR /p

mkdir -p /p/tools

PACKAGES="expect git htop mc moreutils nano ncdu python3 ripgrep sysstat tmux watchman"
DISTRO=$(awk '/^ID=/' /etc/*-release | awk -F'=' '{ print tolower($2) }')

echo "Distribution: $DISTRO"

if [ "$DISTRO" == '"sles"' ];
then
    zypper install $PACKAGES fd moreutils-parallel python3-pip ShellCheck
else
    apt install $PACKAGES fdclone parallel shellcheck ugrep
    apt remove apport apport-symptoms python3-apport
fi

wget https://dystroy.org/broot/download/x86_64-linux/broot
chmod a+x broot
mv broot /usr/local/bin/broot

/r/_impl/setup_rust

export RUSTUP_HOME=/p/tools/rust
export CARGO_HOME=/p/tools/rust/.cargo
source /p/tools/rust/.cargo/env

cargo install --locked bat git-delta httm
chmod a+rx -R /p/tools/rust/.cargo

# VSCode watches
WATCHES=fs.inotify.max_user_watches=524288
grep -qF $WATCHES /etc/sysctl.conf || echo "$WATCHES" >>/etc/sysctl.conf
sysctl -p

# python
python3 -m pip install -U pypyp rich telegram-send
sitecust_dir=$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')
cp _impl/sitecustomize.py "$sitecust_dir"

# libtree
tmp_libtree=$(mktemp -d)
trap "rm -rf $tmp_libtree" EXIT
cd "$tmp_libtree"
git clone https://github.com/haampie/libtree.git
cd libtree
make
make install

# gron
tmp_gron=$(mktemp -d)
trap "rm -rf $tmp_gron" EXIT
cd "$tmp_gron"
wget https://github.com/tomnomnom/gron/releases/download/v0.7.1/gron-linux-amd64-0.7.1.tgz
tar xf gron-linux-amd64-0.7.1.tgz
mv gron /usr/local/bin

add_cronjob()
{
    SCRIPT=$1
    CRONJOB=$2
    ((crontab -l | grep -v "$SCRIPT"); echo "$CRONJOB") | crontab -
}

add_cronjob cronjobs/clean_disk_caches "00 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/clean_disk_caches"
add_cronjob cronjobs/pull "10 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/pull /r"
add_cronjob cronjobs/is_repo_clean "08 05 * * * /r/s/cronic_no_stderr_check /r/cronjobs/is_repo_clean /r"

# git watchman
cd /usr/share/git-core/templates/hooks
cp fsmonitor-watchman.sample query-watchman
chmod a+x query-watchman

popd

echo "OK"
